# Default values for homarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/ajnart/homarr
  pullPolicy: IfNotPresent
  tag: "0.15.9"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}
podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 7575

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 10
  failureThreshold: 5
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 3
  periodSeconds: 10
  failureThreshold: 5

#persistence:
#  enabled: true
#  size: "10Gi"
#  annotations: {}
#  storageClass:
#  existingClaim:

persistence: 
  data:
    enabled: true
    size: "1Gi"
    annotations: {}
    storageClass:
    existingClaim:
  config:
    enabled: true
    size: "1Gi"
    annotations: {}
    storageClass:
    existingClaim:
  icons:
    enabled: true
    size: "1Gi"
    annotations: {}
    storageClass:
    existingClaim:

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
